# This is a basic workflow to help you get started with Actions

name: Ctests

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  windows:
    name: win-${{matrix.os}}
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [windows-latest]
    steps:
    - uses: actions/checkout@v2
    - uses: seanmiddleditch/gha-setup-ninja@master
    - uses: lukka/run-vcpkg@v11
      with:
        vcpkgGitCommitId: 'cf4ebef2294e164875ce17d7937f44d3e3ea156e'
    - name: build
      uses: lukka/run-cmake@v11
      with:
          cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
          configurePreset: 'ninja-multi-vcpkg'
          buildPreset: 'ninja-multi-vcpkg'
    - name: run tests
      run: ctest --test-dir builds/ninja-multi-vcpkg/tests -C Debug
#  macos:
#    name: mac-${{matrix.os}}
#    runs-on: ${{matrix.os}}
#    strategy:
#      matrix:
#        os: [macos-latest]
#    steps:
#    - uses: actions/checkout@v2
#    - uses: seanmiddleditch/gha-setup-ninja@master
#    - uses: lukka/run-vcpkg@v10
#      with:
#        vcpkgGitCommitId: 'ba4aea932f843ae0c37f571dcb86e91871cee103'
#    - name: build
#      uses: lukka/run-cmake@v10
#      with:
#          cmakeListsTxtPath: '${{ github.workspace }}/tests/CTest/CMakeLists.txt'
#          configurePreset: 'ninja-multi-vcpkg'
#          buildPreset: 'ninja-multi-vcpkg'
#    - name: run tests
#      run: ctest --test-dir tests/CTest/builds/ninja-multi-vcpkg -C Debug
  ubuntu:
    name: ${{matrix.os}}-${{matrix.compiler}}
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest]
        compiler: [gcc, clang]
        include:
          - compiler: gcc
            config: 'ninja-multi-gcc'
            cxxflags: -std=c++20
          - compiler: clang
            config: 'ninja-multi-clang'
            cxxflags: -std=c++20
    steps:
    - uses: actions/checkout@v2
    - uses: seanmiddleditch/gha-setup-ninja@master
    - name: reps
      run : sudo add-apt-repository -y "deb http://archive.ubuntu.com/ubuntu `lsb_release -sc` main universe restricted multiverse"
    - name: update
      run: sudo apt-get update -y -qq
    - name: install gcc10
      run: sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 100 --slave /usr/bin/g++ g++ /usr/bin/g++-10 --slave /usr/bin/gcov gcov /usr/bin/gcov-10
    - name: install clang
      run: sudo bash -c "$(wget -O - https://apt.llvm.org/llvm.sh)"
    #dependencies
    - name: install sdl2
      run: sudo apt-get install libsdl2-dev
    - name: install sdl2-image
      run: sudo apt-get install libsdl2-image-dev
    - name: install sdl2-ttf
      run: sudo apt-get install libsdl2-ttf-dev
    - name: build
      uses: lukka/run-cmake@v11
      env:
          CXXFLAGS: ${{ matrix.cxxflags }}
      with:
          cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
          configurePreset: ${{matrix.config}}
          buildPreset:  ${{matrix.config}}
    - name: run tests
      run: ctest --output-on-failure --test-dir builds/${{matrix.config}}/tests -C Debug
